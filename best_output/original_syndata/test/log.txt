2024-11-17 15:11:17,596   INFO  **********************Start logging**********************
2024-11-17 15:11:17,596   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:11:17,596   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:11:17,596   INFO  batch_size       1
2024-11-17 15:11:17,596   INFO  gpu              1
2024-11-17 15:11:17,596   INFO  test_tag         pts6
2024-11-17 15:11:17,596   INFO  
cfg.DATA = edict()
2024-11-17 15:11:17,596   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:11:17,596   INFO  
cfg.MODEL = edict()
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:11:17,596   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:11:17,596   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:11:17,596   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:11:17,596   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:11:17,596   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:11:17,596   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:11:17,596   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:11:17,597   INFO  Total samples: 1600
2024-11-17 15:11:17,765   INFO  **********************Start testing**********************
2024-11-17 15:11:17,765   INFO  RoofNet(
  (keypoint_det_net): PointNet2(
    (sa1): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(6, 32, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (sa2): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (sa3): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (sa4): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (fp4): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (fp3): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (fp2): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(320, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (fp1): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv3): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (shared_fc): Conv1dBN(
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    )
    (drop): Dropout(p=0.5, inplace=False)
    (offset_fc): Conv1d(128, 3, kernel_size=(1,), stride=(1,))
    (cls_fc): Conv1d(128, 1, kernel_size=(1,), stride=(1,))
    (cls_loss_func): SigmoidBCELoss()
    (reg_loss_func): WeightedSmoothL1Loss()
  )
  (cluster_refine_net): ClusterRefineNet(
    (matcher): HungarianMatcher()
    (fea_refine_module): StackSAModuleMSG(
      (groupers): ModuleList(
        (0-1): 2 x QueryAndGroup()
      )
      (mlps): ModuleList(
        (0-1): 2 x Sequential(
          (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU()
        )
      )
    )
    (shared_fc): LinearBN(
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): Linear(in_features=256, out_features=128, bias=True)
    )
    (drop): Dropout(p=0.5, inplace=False)
    (offset_fc): Linear(in_features=128, out_features=3, bias=True)
    (reg_loss_func): WeightedSmoothL1Loss()
  )
  (edge_att_net): EdgeAttentionNet(
    (att_layer): PairedPointAttention(
      (edge_att1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): Sigmoid()
      )
      (edge_att2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): Sigmoid()
      )
      (fea_fusion_layer): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (shared_fc): LinearBN(
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): Linear(in_features=256, out_features=256, bias=True)
    )
    (drop): Dropout(p=0.5, inplace=False)
    (cls_fc): Linear(in_features=256, out_features=1, bias=True)
    (cls_loss_func): SigmoidBCELoss()
  )
)
2024-11-17 15:15:35,761   INFO  **********************Start logging**********************
2024-11-17 15:15:35,762   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:15:35,762   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:15:35,762   INFO  batch_size       1
2024-11-17 15:15:35,762   INFO  gpu              1
2024-11-17 15:15:35,762   INFO  test_tag         pts6
2024-11-17 15:15:35,762   INFO  
cfg.DATA = edict()
2024-11-17 15:15:35,762   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:15:35,762   INFO  
cfg.MODEL = edict()
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:15:35,762   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:15:35,762   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:15:35,762   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:15:35,762   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:15:35,762   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:15:35,762   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:15:35,762   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:15:35,763   INFO  Total samples: 1600
2024-11-17 15:15:36,035   INFO  **********************Start testing**********************
2024-11-17 15:15:36,035   INFO  RoofNet(
  (keypoint_det_net): PointNet2(
    (sa1): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(6, 32, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (sa2): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (sa3): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (sa4): PointNetSAModule(
      (groupers): ModuleList(
        (0): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Conv2ds(
          (conv1): Conv2dBN(
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv2): Conv2dBN(
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (conv3): Conv2dBN(
            (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (fp4): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (fp3): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (fp2): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(320, 256, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (fp1): PointNetFPModule(
      (mlp): Conv2ds(
        (conv1): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv2): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv3): Conv2dBN(
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (shared_fc): Conv1dBN(
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    )
    (drop): Dropout(p=0.5, inplace=False)
    (offset_fc): Conv1d(128, 3, kernel_size=(1,), stride=(1,))
    (cls_fc): Conv1d(128, 1, kernel_size=(1,), stride=(1,))
    (cls_loss_func): SigmoidBCELoss()
    (reg_loss_func): WeightedSmoothL1Loss()
  )
  (cluster_refine_net): ClusterRefineNet(
    (matcher): HungarianMatcher()
    (fea_refine_module): StackSAModuleMSG(
      (groupers): ModuleList(
        (0-1): 2 x QueryAndGroup()
      )
      (mlps): ModuleList(
        (0-1): 2 x Sequential(
          (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU()
        )
      )
    )
    (shared_fc): LinearBN(
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): Linear(in_features=256, out_features=128, bias=True)
    )
    (drop): Dropout(p=0.5, inplace=False)
    (offset_fc): Linear(in_features=128, out_features=3, bias=True)
    (reg_loss_func): WeightedSmoothL1Loss()
  )
  (edge_att_net): EdgeAttentionNet(
    (att_layer): PairedPointAttention(
      (edge_att1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): Sigmoid()
      )
      (edge_att2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=True)
        (4): Sigmoid()
      )
      (fea_fusion_layer): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (shared_fc): LinearBN(
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv): Linear(in_features=256, out_features=256, bias=True)
    )
    (drop): Dropout(p=0.5, inplace=False)
    (cls_fc): Linear(in_features=256, out_features=1, bias=True)
    (cls_loss_func): SigmoidBCELoss()
  )
)
2024-11-17 15:26:14,551   INFO  **********************Start logging**********************
2024-11-17 15:26:14,551   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:26:14,551   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:26:14,551   INFO  batch_size       1
2024-11-17 15:26:14,551   INFO  gpu              1
2024-11-17 15:26:14,551   INFO  test_tag         pts6
2024-11-17 15:26:14,551   INFO  
cfg.DATA = edict()
2024-11-17 15:26:14,551   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:26:14,551   INFO  
cfg.MODEL = edict()
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:26:14,551   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:26:14,551   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:26:14,551   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:26:14,551   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:26:14,551   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:26:14,551   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:26:14,551   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:26:14,552   INFO  Total samples: 1600
2024-11-17 15:26:14,718   INFO  **********************Start testing**********************
2024-11-17 15:27:58,899   INFO  **********************Start logging**********************
2024-11-17 15:27:58,899   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:27:58,899   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:27:58,900   INFO  batch_size       1
2024-11-17 15:27:58,900   INFO  gpu              1
2024-11-17 15:27:58,900   INFO  test_tag         pts6
2024-11-17 15:27:58,900   INFO  
cfg.DATA = edict()
2024-11-17 15:27:58,900   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:27:58,900   INFO  
cfg.MODEL = edict()
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:27:58,900   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:27:58,900   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:27:58,900   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:27:58,900   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:27:58,900   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:27:58,900   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:27:58,900   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:27:58,901   INFO  Total samples: 1600
2024-11-17 15:27:59,390   INFO  **********************Start testing**********************
2024-11-17 15:29:09,369   INFO  **********************Start logging**********************
2024-11-17 15:29:09,369   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:29:09,369   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:29:09,369   INFO  batch_size       1
2024-11-17 15:29:09,369   INFO  gpu              1
2024-11-17 15:29:09,369   INFO  test_tag         pts6
2024-11-17 15:29:09,369   INFO  
cfg.DATA = edict()
2024-11-17 15:29:09,369   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:29:09,369   INFO  
cfg.MODEL = edict()
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:29:09,369   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:29:09,369   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:29:09,369   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:29:09,369   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:29:09,369   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:29:09,369   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:29:09,369   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:29:09,370   INFO  Total samples: 1600
2024-11-17 15:29:09,524   INFO  **********************Start testing**********************
2024-11-17 15:30:02,196   INFO  **********************Start logging**********************
2024-11-17 15:30:02,197   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:30:02,197   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:30:02,197   INFO  batch_size       1
2024-11-17 15:30:02,197   INFO  gpu              1
2024-11-17 15:30:02,197   INFO  test_tag         pts6
2024-11-17 15:30:02,197   INFO  
cfg.DATA = edict()
2024-11-17 15:30:02,197   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:30:02,197   INFO  
cfg.MODEL = edict()
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:30:02,197   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:30:02,197   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:30:02,197   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:30:02,197   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:30:02,197   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:30:02,197   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:30:02,197   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:30:02,198   INFO  Total samples: 1600
2024-11-17 15:30:02,359   INFO  **********************Start testing**********************
2024-11-17 15:31:30,156   INFO  **********************Start logging**********************
2024-11-17 15:31:30,156   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:31:30,157   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:31:30,157   INFO  batch_size       1
2024-11-17 15:31:30,157   INFO  gpu              1
2024-11-17 15:31:30,157   INFO  test_tag         pts6
2024-11-17 15:31:30,157   INFO  
cfg.DATA = edict()
2024-11-17 15:31:30,157   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:31:30,157   INFO  
cfg.MODEL = edict()
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:31:30,157   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:31:30,157   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:31:30,157   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:31:30,157   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:31:30,157   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:31:30,157   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:31:30,157   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:31:30,158   INFO  Total samples: 1600
2024-11-17 15:31:30,507   INFO  **********************Start testing**********************
2024-11-17 15:32:12,736   INFO  **********************Start logging**********************
2024-11-17 15:32:12,737   INFO  data_path        /data/haoran/dataset/RoofReconstructionDataset/SyntheticDataset
2024-11-17 15:32:12,737   INFO  cfg_file         ./model_cfg.yaml
2024-11-17 15:32:12,737   INFO  batch_size       1
2024-11-17 15:32:12,737   INFO  gpu              1
2024-11-17 15:32:12,737   INFO  test_tag         pts6
2024-11-17 15:32:12,737   INFO  
cfg.DATA = edict()
2024-11-17 15:32:12,737   INFO  cfg.DATA.NPOINT: 1024
2024-11-17 15:32:12,737   INFO  
cfg.MODEL = edict()
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.PointNet2 = edict()
2024-11-17 15:32:12,737   INFO  cfg.MODEL.PointNet2.PosRadius: 0.15
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.PointNet2.LossWeight = edict()
2024-11-17 15:32:12,737   INFO  cfg.MODEL.PointNet2.LossWeight.cls_weight: 1.0
2024-11-17 15:32:12,737   INFO  cfg.MODEL.PointNet2.LossWeight.reg_weight: 1.0
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.ClusterRefineNet = edict()
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.ScoreThresh: 0.5
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.MatchRadius: 0.2
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.ClusterRefineNet.Cluster = edict()
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.Cluster.eps: 0.05
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.Cluster.min_pts: 5
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.ClusterRefineNet.RefineSA = edict()
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Radii: [0.1, 0.2]
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.Nsamples: [16, 16]
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.RefineSA.MLPs: [[128, 128], [128, 128]]
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.ClusterRefineNet.LossWeight = edict()
2024-11-17 15:32:12,737   INFO  cfg.MODEL.ClusterRefineNet.LossWeight.reg_weight: 1.0
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.EdgeAttentionNet = edict()
2024-11-17 15:32:12,737   INFO  
cfg.MODEL.EdgeAttentionNet.LossWeight = edict()
2024-11-17 15:32:12,737   INFO  cfg.MODEL.EdgeAttentionNet.LossWeight.cls_weight: 1.0
2024-11-17 15:32:12,737   INFO  cfg.ROOT_DIR: /data/haoran/Point2Roof
2024-11-17 15:32:12,738   INFO  Total samples: 1600
2024-11-17 15:32:13,052   INFO  ==> Loading parameters from checkpoint
2024-11-17 15:32:13,086   INFO  ==> Done
2024-11-17 15:32:13,086   INFO  **********************Start testing**********************
2024-11-17 15:36:41,694   INFO  pts_recall: 0.973629
2024-11-17 15:36:41,695   INFO  pts_precision: 0.991215
2024-11-17 15:36:41,695   INFO  pts_bias: 0.043202, 0.033053, 0.027903
2024-11-17 15:36:41,695   INFO  edge_recall: 0.916294
2024-11-17 15:36:41,695   INFO  edge_precision: 0.966855
